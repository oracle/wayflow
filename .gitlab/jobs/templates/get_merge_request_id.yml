.get_merge_request_id:
  script:
    - |
      #!/bin/bash

      # Encode the branch name
      ENCODED_BRANCH_NAME=$(echo -n "${CI_COMMIT_REF_NAME}" | sed 's|/|%2F|g')
      API_URL="$GITLAB_URL/projects/$CI_PROJECT_ID"

      echo "Checking merge requests for branch: '${CI_COMMIT_REF_NAME}'"

      # Temporary file for HTTP response
      HTTP_RESPONSE=$(mktemp)

      # Make API call and capture response + HTTP code
      HTTP_STATUS=$(curl -s -o "$HTTP_RESPONSE" -w "%{http_code}" \
        --header "PRIVATE-TOKEN: $GITLAB_BOT_TOKEN" \
        "${API_URL}/merge_requests?state=opened&source_branch=$ENCODED_BRANCH_NAME")

      if [ "$HTTP_STATUS" -ne 200 ]; then
        echo "Error: Received HTTP status $HTTP_STATUS when fetching merge requests. Exiting."
        cat "$HTTP_RESPONSE"
        rm "$HTTP_RESPONSE"
        exit 1
      fi

      RESPONSE=$(cat "$HTTP_RESPONSE")
      rm "$HTTP_RESPONSE"

      # Count merge requests by counting occurrences of "iid"
      MR_COUNT=$(echo "$RESPONSE" | grep -o '"iid":' | wc -l)

      if [ "$MR_COUNT" -eq 0 ]; then
        echo "No merge requests found for branch '${CI_COMMIT_REF_NAME}'."
        exit 1
      elif [ "$MR_COUNT" -gt 1 ]; then
        echo "Error: More than one merge request ($MR_COUNT) is open for branch '${CI_COMMIT_REF_NAME}' in $CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME."
        exit 1
      else
        echo "One merge request found for branch '${CI_COMMIT_REF_NAME}'."
        MR_ID=$(echo "$RESPONSE" | grep -o '"iid":[0-9]*' | head -n1 | cut -d ':' -f2)
        export PUBLIC_MERGE_REQUEST_ID="$MR_ID"
        echo "PUBLIC_MERGE_REQUEST_ID='$PUBLIC_MERGE_REQUEST_ID'"
      fi