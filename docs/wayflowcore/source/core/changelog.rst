Changelog
=========

WayFlow 25.4.2
--------------

New features
^^^^^^^^^^^^

* **Added Tool Confirmation before Execution:**
  Introduced a `requires_confirmation` flag to the base Tool Class. When enabled, this flag will pause tool execution and emit a `ToolExecutionConfirmationStatus`, requiring explicit user confirmation before proceeding.
  During confirmation, users may edit the tool’s arguments or provide a rejection reason. The tool executes only after confirmation is granted.

  For more information check out :doc:`the corresponding how-to guide <howtoguides/howto_userconfirmation>`

Bug fixes
^^^^^^^^^

* **Flow input and output descriptors**

  Fixed a bug where Flow input and output descriptors were sometimes ignored:

  - All the inputs required by the steps that compose the Flow were used instead of the input descriptors provided.
  - The intersection of all the outputs generated by any branch in the Flow was used instead of the output descriptors provided.

  The behavior is now:

  - Input descriptors can now be a subset of all the inputs required by the steps that compose the Flow,
    as long as the missing step inputs have a default value.
  - Output descriptors can be a subset of the intersection of all the outputs generated by any branch in the Flow.
    This is now correctly reflected also in other parts of the package.


Miscellaneous
^^^^^^^^^^^^^

* **Dependency Security Updates:**
  Upgraded **MCP** to **1.17.0** and **PyYAML** to **6.0.3** to resolve known security vulnerabilities, including
  `GHSA-j975-95f5-7wqh <https://github.com/advisories/GHSA-j975-95f5-7wqh>`_,
  `GHSA-3qhf-m339-9g5v <https://github.com/advisories/GHSA-3qhf-m339-9g5v>`_,
  `GHSA-6757-jp84-gxfx <https://github.com/advisories/GHSA-6757-jp84-gxfx>`_,
  and `GHSA-8q59-q68h-6hv4 <https://github.com/advisories/GHSA-8q59-q68h-6hv4>`_.

WayFlow 25.4.1 — Initial release
--------------------------------

**WayFlow is here:** Build advanced AI-powered assistants with ease!

With this release, WayFlow provides all you need for building AI-powered assistants, supporting structured workflows,
autonomous agents, multi-agent collaboration, human-in-the-loop capabilities, and tool-based extensibility.
Modular design ensures you can rapidly build, iterate, and customize both simple and complex assistants for any task.

Explore further:

- :doc:`How-to Guides <howtoguides/index>`
- :doc:`Tutorials <tutorials/index>`
- :doc:`API Reference <api/index>`
